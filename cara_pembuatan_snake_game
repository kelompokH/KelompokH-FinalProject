<h1>Cara Pembuatan Game Snake</h1>
**Buat Layar:**
Untuk membuat layar menggunakan _Pygame_, menggunakan fungsi _display.set_mode()_. Selain itu, juga menggunakan metode _init()_ dan _quit()_ untuk menginisialisasi dan menghapus semua inisialisasi di awal dan akhir kode. Metode _update()_ digunakan untuk memperbarui setiap perubahan yang dibuat pada layar. Ada metode lain yaitu flip() yang bekerja mirip dengan fungsi update(). Perbedaannya adalah metode update() hanya memperbarui perubahan yang dibuat (namun, jika tidak ada parameter yang diteruskan, memperbarui layar lengkap) tetapi metode flip() mengulang layar lengkap lagi.
_![pic1](https://user-images.githubusercontent.com/89029568/130027861-c89ed672-96de-469f-b94d-65a737b54278.png)_ y
![pic2](https://user-images.githubusercontent.com/89029568/130027999-5cd111bd-ed77-479d-860e-32af0f237014.png)

Tetapi ketika Anda menjalankan kode ini, layar akan muncul, tetapi akan segera menutup juga. Untuk memperbaikinya, Anda harus menggunakan _game loop_ menggunakan _while loop_ sebelum saya benar-benar keluar dari game sebagai berikut:
![pic3](https://user-images.githubusercontent.com/89029568/130028166-10dc0805-469f-45d5-b583-accacf810b28.png)

Saat menjalankan kode ini, kita akan melihat bahwa layar yang dilihat sebelumnya tidak berhenti dan juga mengembalikan semua tindakan yang terjadi di atasnya, dengan melakukannya menggunakan _fungsi event.get()_. Kami juga telah menamai layarnya sebagai “Snake Game” menggunakan fungsi _display.set_caption()_.

![pic4](https://user-images.githubusercontent.com/89029568/130028252-2964b691-4181-47c0-ad93-237b1c120dbe.png)

Sekarang, kita memiliki layar untuk memainkan _game_ Ular, tetapi ketika mencoba mengklik tombol tutup, layar tidak menutup. Ini karena belum menentukan bahwa layar harus keluar saat kita menekan tombol tutup itu. Untuk melakukan itu, _Pygame_ menyediakan event yang disebut "QUIT" dan itu harus digunakan sebagai berikut:

![pic5](https://user-images.githubusercontent.com/89029568/130028394-d7da6d00-5590-4db0-8224-359f80978b78.png)

Jadi sekarang layar sudah siap dan langkah selanjutnya adalah menggambar ular kita di layar yang tercakup dalam topik dibawah ini.

**Buat Ular**:
Untuk membuat ular, pertama-tama dengan menginisialisasi beberapa variabel warna untuk mewarnai ular, makanan, layar, dll. Skema warna yang digunakan di _Pygame_ adalah _RGB_ yaitu "Merah Hijau Biru". Jika mengatur semua ini ke 0, warnanya akan menjadi hitam dan 255 akan menjadi putih. Jadi bentuk ular dibuat menjadi persegi panjang. Untuk menggambar persegi panjang di _Pygame_, dapat menggunakan fungsi yang disebut _draw.rect()_ yang akan membantu menggambar persegi panjang dengan warna dan ukuran yang diinginkan.

![pic6](https://user-images.githubusercontent.com/89029568/130028631-79e50e0d-9eaa-4b1a-bb22-d3c22e48d7df.png)
![pic7](https://user-images.githubusercontent.com/89029568/130028649-22470607-3e52-4e73-9547-6d13cb8630ff.png)

**Langkah selanjutnya adalah membuat ular bergerak.**
Dalam pembuatan game ini kami juga memasuki sumber suara dalam permainan yang dimasukkan Ketika pada saat memulai permainan, pada saat ular melewati makannya dan ketika permainan kalah dengan memasukkan perintah seperti dibawah ini: 
  _crash_sound = pygame.mixer.Sound("crash.mp3")
   pygame.mixer.music.load("jazz.mp3")
   snake_eat = pygame.mixer.Sound("eating.wav")_

**Perpindahan gerak ular:** 
Permindahan gerakan ularnya mengikuti pergerakan dijendela permainan dengan menggunakan perintah yang ada di kelas _KEYDOWN_ di _Pygame_. _Event_ yang digunakan di sini adalah, _K_UP, K_DOWN, K_LEFT,_ dan _K_RIGHT_ untuk membuat ular bergerak ke atas, bawah, kiri dan kanan. Kemudian juga kita masukkan perintah fungsi suara pada saat permainan ini dimulai dengan perintah 
     _pygame.mixer.music.load("jazz.mp3")
     pygame.mixer.music.play(-1)_
![pic8](https://user-images.githubusercontent.com/89029568/130028976-5b4bb69d-9fd1-49e4-959f-a43f4f9ad06f.png)
![pic9](https://user-images.githubusercontent.com/89029568/130029007-e761e37a-50ed-4c65-b313-ea66c8a03cce.png)
![pic10](https://user-images.githubusercontent.com/89029568/130029448-e2ac928e-174c-427f-ad80-7501cd2503f3.png)
![pic11](https://user-images.githubusercontent.com/89029568/130029473-65722157-303f-4449-9e1c-79da6105d7e0.png)

**Menambahkan Makanan:**
Di sini, kita akan menambahkan beberapa makanan untuk ular dan ketika ular melewati makanan itu, akan mendapat pesan yang mengatakan "yummy!!" Panjang ular pada dasarnya terkandung dalam daftar dan ukuran awal yang ditentukan dalam kode berikut adalah satu blok. Kemudian setelah ular berhasil melewati makanannya pertambahan panjang ular akan bertambah 1 dan juga akan menampilkan dibagian skornya. 
Kemudian juga kita masukkan perintah fungsi suara pada saat ularnya ini melewati makanannya dengan perintah
_snake_eat.play()_
![pic12](https://user-images.githubusercontent.com/89029568/130029667-9b108704-4aeb-4d3d-8937-99248acddf9f.png)
![pic14](https://user-images.githubusercontent.com/89029568/130029857-7cae9c64-9dc6-4325-a7d2-5f2f7e000845.png)

![pic13](https://user-images.githubusercontent.com/89029568/130029692-3dfa890e-0acd-47f0-ab52-d96f975eb070.png)

**Menampilkan Skor:**
Dalam menampilkan skor pemain, terlebih dahulu dengan membuat fungsi baru sebagai "Your_score". Fungsi ini akan menampilkan panjang ular dikurangi 1 karena itulah ukuran awal ular.
![pic15](https://user-images.githubusercontent.com/89029568/130029983-16f925c3-3cd4-4852-b7ec-22b5e258835e.png)

**Permainan kalah :**
Dalam permainan ular ini, jika ular mencapai batas layar, maka permainan akan kalah. Untuk menentukan ini, menggunakan pernyataan 'jika' yang mendefinisikan batas koordinat x dan y ular menjadi kurang dari atau sama dengan _layer_. 
Ketika permainan sudah kalah dan ingin melanjutkan permainannya kembali, dengan menggunakan perintah tekan tombol _keyboard_ C untuk memulai kembali dan jika ingin keluar dari permainan ini dengan menekan tombol _keyboard_ Q untuk keluar
Kemudian juga kita masukkan perintah fungsi suara pada saat permainan ini kalah dengan perintah:
_pygame.mixer.Sound.play(crash_sound)_
dan juga perintah ketika permainan ini keluar atau terhenti, suara dalam permainan ini juga akan berhenti, sesuai dengan perintah fungsi dibawah ini: 
          
            _pygame.mixer.music.stop() 
            pygame.display.update()_

![pic16](https://user-images.githubusercontent.com/89029568/130030241-f05e2140-6561-4b63-83e6-933824904d63.png)
![pic17](https://user-images.githubusercontent.com/89029568/130030260-159e44b6-cf37-4611-8022-cd58014740f2.png)
![pic18](https://user-images.githubusercontent.com/89029568/130030273-3608565b-b5a4-4499-99d9-1ba1c7fc0fad.png)
![pic19](https://user-images.githubusercontent.com/89029568/130030290-d64684bb-9010-4a8b-8a05-0005020804a1.png)
